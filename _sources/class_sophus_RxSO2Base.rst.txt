.. index:: pair: class; sophus::RxSO2Base
.. _doxid-classsophus_1_1_rx_s_o2_base:

template class sophus::RxSO2Base
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>` base type - implements :ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>` class but is storage agnostic. :ref:`More...<details-classsophus_1_1_rx_s_o2_base>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <rxso2.hpp>
	
	template <class Derived>
	class RxSO2Base {
	public:
		// typedefs
	
		using :target:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` = typename Eigen::internal::traits<Derived>:::ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` ;
		using :target:`ComplexType<doxid-classsophus_1_1_rx_s_o2_base_1ac94c88cefdd73c579e96a76576b6aaff>` = typename Eigen::internal::traits<Derived>:::ref:`ComplexType<doxid-classsophus_1_1_rx_s_o2_base_1ac94c88cefdd73c579e96a76576b6aaff>` ;
		using :target:`ComplexTemporaryType<doxid-classsophus_1_1_rx_s_o2_base_1a826881ee932ba1868f60dc48a2a338ff>` = :ref:`sophus::Vector2<doxid-namespacesophus_1a54452ae97bdb09f94e3d89cb9bd17000>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`Options<doxid-classsophus_1_1_rx_s_o2_base_1a023d1bb97b08fd604cafa14495ee3ca8>`> ;
		using :target:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` = :ref:`Matrix<doxid-namespacesophus_1a7f99d420690326fc31ef6aed3fd0038c>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kMatrixDim<doxid-classsophus_1_1_rx_s_o2_base_1ad74752cdf4ba4c96951306bf3e276a47>`, :ref:`kMatrixDim<doxid-classsophus_1_1_rx_s_o2_base_1ad74752cdf4ba4c96951306bf3e276a47>`> ;
		using :target:`Point<doxid-classsophus_1_1_rx_s_o2_base_1a79ce502ab4a11a692ee1e611501401c7>` = :ref:`Vector2<doxid-namespacesophus_1a54452ae97bdb09f94e3d89cb9bd17000>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> ;
		using :target:`HomogeneousPoint<doxid-classsophus_1_1_rx_s_o2_base_1a2f8d5487fb1cc2c15f5ae14f4439300c>` = :ref:`Vector3<doxid-namespacesophus_1af4f60bd964bf8b3a37bd49dda57aa1d8>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> ;
		using :target:`Line<doxid-classsophus_1_1_rx_s_o2_base_1a93c71e02d5236a40ed8db0b8b8fb47a4>` = :ref:`ParametrizedLine2<doxid-namespacesophus_1a2099262df2303edd3d4aac471be2bf19>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> ;
		using :target:`Hyperplane<doxid-classsophus_1_1_rx_s_o2_base_1a80b11a558196a77a4eee90af07879c36>` = :ref:`Hyperplane2<doxid-namespacesophus_1ae945e1ad1792e90fc9b4e0529ad8d263>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> ;
		using :target:`Tangent<doxid-classsophus_1_1_rx_s_o2_base_1a52b1927c14fdfe43523c2e9f25d09518>` = :ref:`Vector<doxid-namespacesophus_1a7c637d4509eb50d45192c268f3c0d2d4>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`> ;
		using :target:`Adjoint<doxid-classsophus_1_1_rx_s_o2_base_1a7d4ecfb12e4fcee56e1bdb46fd2d704e>` = :ref:`Matrix<doxid-namespacesophus_1a7f99d420690326fc31ef6aed3fd0038c>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`> ;
		using :ref:`ReturnScalar<doxid-classsophus_1_1_rx_s_o2_base_1a439c927bf857893f82e5165b6f8c9a4e>` = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, typename OtherDerived::Scalar>::ReturnType ;
		using :target:`RxSO2Product<doxid-classsophus_1_1_rx_s_o2_base_1a0915001224e4bdf8dd7f32f0377793e4>` = :ref:`RxSO2<doxid-classsophus_1_1_rx_s_o2>`<:ref:`ReturnScalar<doxid-classsophus_1_1_rx_s_o2_base_1a439c927bf857893f82e5165b6f8c9a4e>`<OtherDerived>> ;
		using :target:`PointProduct<doxid-classsophus_1_1_rx_s_o2_base_1a8f35477ff6db4b2f2de1986a988e3a96>` = :ref:`Vector2<doxid-namespacesophus_1a54452ae97bdb09f94e3d89cb9bd17000>`<:ref:`ReturnScalar<doxid-classsophus_1_1_rx_s_o2_base_1a439c927bf857893f82e5165b6f8c9a4e>`<PointDerived>> ;
		using :target:`HomogeneousPointProduct<doxid-classsophus_1_1_rx_s_o2_base_1a47b449e34b2708c133b91b22b5ab6c9b>` = :ref:`Vector3<doxid-namespacesophus_1af4f60bd964bf8b3a37bd49dda57aa1d8>`<:ref:`ReturnScalar<doxid-classsophus_1_1_rx_s_o2_base_1a439c927bf857893f82e5165b6f8c9a4e>`<HPointDerived>> ;

		// fields
	
		static constexpr int :target:`Options<doxid-classsophus_1_1_rx_s_o2_base_1a023d1bb97b08fd604cafa14495ee3ca8>` = Eigen::internal::traits<Derived>::Options;
		static constexpr int :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>` = 2;
		static constexpr int :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>` = 2;
		static constexpr int :ref:`kMatrixDim<doxid-classsophus_1_1_rx_s_o2_base_1ad74752cdf4ba4c96951306bf3e276a47>` = 2;
		static constexpr int :ref:`kPointDim<doxid-classsophus_1_1_rx_s_o2_base_1a82b3534a7bfc08896128d1663969fc05>` = 2;

		// methods
	
		:ref:`Adjoint<doxid-classsophus_1_1_rx_s_o2_base_1a7d4ecfb12e4fcee56e1bdb46fd2d704e>` :ref:`Adj<doxid-classsophus_1_1_rx_s_o2_base_1a0c08000c72527e0bf6ff0fb8d92a4d3a>`() const;
		:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` :ref:`angle<doxid-classsophus_1_1_rx_s_o2_base_1a1b599c82aaf8afc78e34f9734ceeb82e>`() const;
	
		template <class NewScalarType>
		:ref:`RxSO2<doxid-classsophus_1_1_rx_s_o2>`<NewScalarType> :ref:`cast<doxid-classsophus_1_1_rx_s_o2_base_1ab3b35d4cc3c21329886848030358be2b>`() const;
	
		:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`* :ref:`data<doxid-classsophus_1_1_rx_s_o2_base_1aa385d84efcf404a0a58a5b2b82ff1db4>`();
		:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` const* :ref:`data<doxid-classsophus_1_1_rx_s_o2_base_1a27aeb1a4a89a41dc7a3167c580ea5cfb>`() const;
		:ref:`RxSO2<doxid-classsophus_1_1_rx_s_o2>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> :ref:`inverse<doxid-classsophus_1_1_rx_s_o2_base_1a7c8de99d01c83fa4872846469d1f9266>`() const;
		:ref:`Tangent<doxid-classsophus_1_1_rx_s_o2_base_1a52b1927c14fdfe43523c2e9f25d09518>` :ref:`log<doxid-classsophus_1_1_rx_s_o2_base_1ac33232df79ee13bca96ff58da3a2966c>`() const;
		:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` :ref:`matrix<doxid-classsophus_1_1_rx_s_o2_base_1a9d5cbaf049c4cdeeebb11cd2fef9aed9>`() const;
	
		template <class OtherDerived>
		RxSO2Base<Derived>& :ref:`operator=<doxid-classsophus_1_1_rx_s_o2_base_1a0b4f9dd9ac4211a4df8b4d3f1234f71d>`(RxSO2Base<OtherDerived> const& other);
	
		template <typename OtherDerived>
		:ref:`RxSO2Product<doxid-classsophus_1_1_rx_s_o2_base_1a0915001224e4bdf8dd7f32f0377793e4>`<OtherDerived> :ref:`operator*<doxid-classsophus_1_1_rx_s_o2_base_1ad78ea28b8a20defd62067b4b1a00a1a5>`(RxSO2Base<OtherDerived> const& other) const;
	
		template <
			typename PointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 2>::value>::type
			>
		:ref:`PointProduct<doxid-classsophus_1_1_rx_s_o2_base_1a8f35477ff6db4b2f2de1986a988e3a96>`<PointDerived> :ref:`operator*<doxid-classsophus_1_1_rx_s_o2_base_1abc3a9d2c72614c76ee25283c53f05cc5>`(Eigen::MatrixBase<PointDerived> const& p) const;
	
		template <
			typename HPointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 3>::value>::type
			>
		:ref:`HomogeneousPointProduct<doxid-classsophus_1_1_rx_s_o2_base_1a47b449e34b2708c133b91b22b5ab6c9b>`<HPointDerived> :ref:`operator*<doxid-classsophus_1_1_rx_s_o2_base_1a8a3acd0fed4ca807432d419c46f09621>`(Eigen::MatrixBase<HPointDerived> const& p) const;
	
		:ref:`Line<doxid-classsophus_1_1_rx_s_o2_base_1a93c71e02d5236a40ed8db0b8b8fb47a4>` :ref:`operator*<doxid-classsophus_1_1_rx_s_o2_base_1a1e42aa93184ccd4826b5e9c3c346f584>`(:ref:`Line<doxid-classsophus_1_1_rx_s_o2_base_1a93c71e02d5236a40ed8db0b8b8fb47a4>` const& l) const;
		:ref:`Hyperplane<doxid-classsophus_1_1_rx_s_o2_base_1a80b11a558196a77a4eee90af07879c36>` :ref:`operator*<doxid-classsophus_1_1_rx_s_o2_base_1ab35b3fd004cf9c79b6307507208748c4>`(:ref:`Hyperplane<doxid-classsophus_1_1_rx_s_o2_base_1a80b11a558196a77a4eee90af07879c36>` const& p) const;
	
		template <
			typename OtherDerived,
			typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
			>
		RxSO2Base<Derived>& :ref:`operator*=<doxid-classsophus_1_1_rx_s_o2_base_1ab45c8ed4e597c59faf4787e488eb7a7a>`(RxSO2Base<OtherDerived> const& other);
	
		:ref:`Matrix<doxid-namespacesophus_1a7f99d420690326fc31ef6aed3fd0038c>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`> :ref:`Dx_this_mul_exp_x_at_0<doxid-classsophus_1_1_rx_s_o2_base_1ab4d6e0794b32b7dccf9ef449162946a5>`() const;
		:ref:`Matrix<doxid-namespacesophus_1a7f99d420690326fc31ef6aed3fd0038c>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`, :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>`> :ref:`Dx_log_this_inv_by_x_at_this<doxid-classsophus_1_1_rx_s_o2_base_1a76cbf7d0ffc4fab6aac8f32b726588c8>`() const;
		:ref:`sophus::Vector<doxid-namespacesophus_1a7c637d4509eb50d45192c268f3c0d2d4>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>`> :ref:`params<doxid-classsophus_1_1_rx_s_o2_base_1aef9298ddd2d6db86a01eaf3d137a7d68>`() const;
		void :ref:`setComplex<doxid-classsophus_1_1_rx_s_o2_base_1a484bd11ef4cc03a3eb42b7a0bce2e969>`(:ref:`Vector2<doxid-namespacesophus_1a54452ae97bdb09f94e3d89cb9bd17000>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> const& z);
		:ref:`ComplexType<doxid-classsophus_1_1_rx_s_o2_base_1ac94c88cefdd73c579e96a76576b6aaff>` const& :ref:`complex<doxid-classsophus_1_1_rx_s_o2_base_1a6bdfd88f75eaa8dfc10a9396af38cdef>`() const;
		:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` :ref:`rotationMatrix<doxid-classsophus_1_1_rx_s_o2_base_1abdf765563c43a6705b4e54a3b614625d>`() const;
		:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` :ref:`scale<doxid-classsophus_1_1_rx_s_o2_base_1af369491cddc82b866f951f5148db0b00>`() const;
		void :ref:`setAngle<doxid-classsophus_1_1_rx_s_o2_base_1a016b34f11120c500b7775f93f98dc0eb>`(:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` const& theta);
		void :ref:`setRotationMatrix<doxid-classsophus_1_1_rx_s_o2_base_1a9eb8ca3889379395594ad29fc69a33d5>`(:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` const& R);
		void :ref:`setScale<doxid-classsophus_1_1_rx_s_o2_base_1a355d2bb639b0ff62ac17c103958e443b>`(:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` const& scale);
		void :ref:`setScaledRotationMatrix<doxid-classsophus_1_1_rx_s_o2_base_1a86b94658b58a4fb9acfbda91a1226857>`(:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` const& sR);
		void :ref:`setSO2<doxid-classsophus_1_1_rx_s_o2_base_1a626dbfc3cb15c08ef0ca4b062dbe3e89>`(:ref:`SO2<doxid-classsophus_1_1_s_o2>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> const& so2);
		:ref:`SO2<doxid-classsophus_1_1_s_o2>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> :target:`so2<doxid-classsophus_1_1_rx_s_o2_base_1ad5d023944708dd708706432156d951e4>`() const;
	};

	// direct descendants

	template <class ScalarT, int Options>
	class :ref:`Map<sophus::RxSO2<ScalarT> const, Options><doxid-class_eigen_1_1_map_3_01sophus_1_1_rx_s_o2_3_01_scalar_t_01_4_01const_00_01_options_01_4>`;

	template <class ScalarT, int Options>
	class :ref:`Map<sophus::RxSO2<ScalarT>, Options><doxid-class_eigen_1_1_map_3_01sophus_1_1_rx_s_o2_3_01_scalar_t_01_4_00_01_options_01_4>`;
.. _details-classsophus_1_1_rx_s_o2_base:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>` base type - implements :ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>` class but is storage agnostic.

This class implements the group ``R+ x SO(2)``, the direct product of the group of positive scalar 2x2 matrices (= isomorph to the positive real numbers) and the two-dimensional special orthogonal group SO(2). Geometrically, it is the group of rotation and scaling in two dimensions. As a matrix groups, R+ x SO(2) consists of matrices of the form ``s * R`` where ``R`` is an orthogonal matrix with ``det(R) = 1`` and ``s > 0`` being a positive real number. In particular, it has the following form:

.. code-block:: cpp

	| s * cos(theta)  s * -sin(theta) |
	| s * sin(theta)  s *  cos(theta) |

where ``theta`` being the rotation angle. Internally, it is represented by the first column of the rotation matrix, or in other words by a non-zero complex number.

R+ x SO(2) is not compact, but a commutative group. First it is not compact since the scale factor is not bound. Second it is commutative since ``sR(alpha, s1) * sR(beta, s2) = sR(beta, s2) * sR(alpha, s1)``, simply because ``alpha + beta = beta + alpha`` and ``s1 * s2 = s2 * s1`` with ``alpha`` and ``beta`` being rotation angles and ``s1``, ``s2`` being scale factors.

This class has the explicit class invariant that the scale ``s`` is not too close to either zero or infinity. Strictly speaking, it must hold that:

``:ref:`complex() <doxid-classsophus_1_1_rx_s_o2_base_1a6bdfd88f75eaa8dfc10a9396af38cdef>`.norm() >= :ref:`Constants::epsilon() <doxid-structsophus_1_1_constants_1a4a788a19ef66538a6d80273d68994184>``` and ``1. / :ref:`complex() <doxid-classsophus_1_1_rx_s_o2_base_1a6bdfd88f75eaa8dfc10a9396af38cdef>`.norm() >= :ref:`Constants::epsilon() <doxid-structsophus_1_1_constants_1a4a788a19ef66538a6d80273d68994184>```.

In order to obey this condition, group multiplication is implemented with saturation such that a product always has a scale which is equal or greater this threshold.

Typedefs
--------

.. index:: pair: typedef; ReturnScalar
.. _doxid-classsophus_1_1_rx_s_o2_base_1a439c927bf857893f82e5165b6f8c9a4e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	using ReturnScalar = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, typename OtherDerived::Scalar>::ReturnType 

For binary operations the return type is determined with the ScalarBinaryOpTraits feature of :ref:`Eigen <doxid-namespace_eigen>`. This allows mixing concrete and Map types, as well as other compatible scalar types such as Ceres::Jet and double scalars with :ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>` operations.

Fields
------

.. index:: pair: variable; kDoF
.. _doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int kDoF = 2

Degrees of freedom of manifold, number of dimensions in tangent space (one for rotation and one for scaling).

.. index:: pair: variable; kNumParameters
.. _doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int kNumParameters = 2

Number of internal parameters used (complex number is a tuple).

.. index:: pair: variable; kMatrixDim
.. _doxid-classsophus_1_1_rx_s_o2_base_1ad74752cdf4ba4c96951306bf3e276a47:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int kMatrixDim = 2

Group transformations are 2x2 matrices.

.. index:: pair: variable; kPointDim
.. _doxid-classsophus_1_1_rx_s_o2_base_1a82b3534a7bfc08896128d1663969fc05:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int kPointDim = 2

Points are 2-dimensional.

Methods
-------

.. index:: pair: function; Adj
.. _doxid-classsophus_1_1_rx_s_o2_base_1a0c08000c72527e0bf6ff0fb8d92a4d3a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Adjoint<doxid-classsophus_1_1_rx_s_o2_base_1a7d4ecfb12e4fcee56e1bdb46fd2d704e>` Adj() const

Adjoint transformation.

This function return the adjoint transformation ``Ad`` of the group element ``A`` such that for all ``x`` it holds that ``hat(Ad_A * x) = A * hat(x) A^{-1}``. See hat-operator below.

For RxSO(2), it simply returns the identity matrix.

.. index:: pair: function; angle
.. _doxid-classsophus_1_1_rx_s_o2_base_1a1b599c82aaf8afc78e34f9734ceeb82e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` angle() const

Returns rotation angle.

.. index:: pair: function; cast
.. _doxid-classsophus_1_1_rx_s_o2_base_1ab3b35d4cc3c21329886848030358be2b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class NewScalarType>
	:ref:`RxSO2<doxid-classsophus_1_1_rx_s_o2>`<NewScalarType> cast() const

Returns copy of instance casted to NewScalarType.

.. index:: pair: function; data
.. _doxid-classsophus_1_1_rx_s_o2_base_1aa385d84efcf404a0a58a5b2b82ff1db4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`* data()

This provides unsafe read/write access to internal data. RxSO(2) is represented by a complex number (two parameters). When using direct write access, the user needs to take care of that the complex number is not set close to zero.

Note: The first parameter represents the real part, while the second parameter represent the imaginary part.

.. index:: pair: function; data
.. _doxid-classsophus_1_1_rx_s_o2_base_1a27aeb1a4a89a41dc7a3167c580ea5cfb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` const* data() const

Const version of :ref:`data() <doxid-classsophus_1_1_rx_s_o2_base_1aa385d84efcf404a0a58a5b2b82ff1db4>` above.

.. index:: pair: function; inverse
.. _doxid-classsophus_1_1_rx_s_o2_base_1a7c8de99d01c83fa4872846469d1f9266:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`RxSO2<doxid-classsophus_1_1_rx_s_o2>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> inverse() const

Returns group inverse.

.. index:: pair: function; log
.. _doxid-classsophus_1_1_rx_s_o2_base_1ac33232df79ee13bca96ff58da3a2966c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Tangent<doxid-classsophus_1_1_rx_s_o2_base_1a52b1927c14fdfe43523c2e9f25d09518>` log() const

Logarithmic map.

Computes the logarithm, the inverse of the group exponential which maps element of the group (scaled rotation matrices) to elements of the tangent space (rotation-vector plus logarithm of scale factor).

To be specific, this function computes ``vee(logmat(.))`` with ``logmat(.)`` being the matrix logarithm and ``vee(.)`` the vee-operator of :ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>`.

.. index:: pair: function; matrix
.. _doxid-classsophus_1_1_rx_s_o2_base_1a9d5cbaf049c4cdeeebb11cd2fef9aed9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` matrix() const

Returns 2x2 matrix representation of the instance.

For :ref:`RxSO2 <doxid-classsophus_1_1_rx_s_o2>`, the matrix representation is an scaled orthogonal matrix ``sR`` with ``det(R)=s^2``, thus a scaled rotation matrix ``R`` with scale ``s``.

.. index:: pair: function; operator=
.. _doxid-classsophus_1_1_rx_s_o2_base_1a0b4f9dd9ac4211a4df8b4d3f1234f71d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class OtherDerived>
	RxSO2Base<Derived>& operator=(RxSO2Base<OtherDerived> const& other)

Assignment-like operator from OtherDerived.

.. index:: pair: function; operator*
.. _doxid-classsophus_1_1_rx_s_o2_base_1ad78ea28b8a20defd62067b4b1a00a1a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename OtherDerived>
	:ref:`RxSO2Product<doxid-classsophus_1_1_rx_s_o2_base_1a0915001224e4bdf8dd7f32f0377793e4>`<OtherDerived> operator*(RxSO2Base<OtherDerived> const& other) const

Group multiplication, which is rotation concatenation and scale multiplication.

Note: This function performs saturation for products close to zero in order to ensure the class invariant.

.. index:: pair: function; operator*
.. _doxid-classsophus_1_1_rx_s_o2_base_1abc3a9d2c72614c76ee25283c53f05cc5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename PointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 2>::value>::type
		>
	:ref:`PointProduct<doxid-classsophus_1_1_rx_s_o2_base_1a8f35477ff6db4b2f2de1986a988e3a96>`<PointDerived> operator*(Eigen::MatrixBase<PointDerived> const& p) const

Group action on 2-points.

This function rotates a 2 dimensional point ``p`` by the :ref:`SO2 <doxid-classsophus_1_1_s_o2>` element ``bar_R_foo`` (= rotation matrix) and scales it by the scale factor ``s`` :

``p_bar = s * (bar_R_foo * p_foo)``.

.. index:: pair: function; operator*
.. _doxid-classsophus_1_1_rx_s_o2_base_1a8a3acd0fed4ca807432d419c46f09621:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename HPointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 3>::value>::type
		>
	:ref:`HomogeneousPointProduct<doxid-classsophus_1_1_rx_s_o2_base_1a47b449e34b2708c133b91b22b5ab6c9b>`<HPointDerived> operator*(Eigen::MatrixBase<HPointDerived> const& p) const

Group action on homogeneous 2-points. See above for more details.

.. index:: pair: function; operator*
.. _doxid-classsophus_1_1_rx_s_o2_base_1a1e42aa93184ccd4826b5e9c3c346f584:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Line<doxid-classsophus_1_1_rx_s_o2_base_1a93c71e02d5236a40ed8db0b8b8fb47a4>` operator*(:ref:`Line<doxid-classsophus_1_1_rx_s_o2_base_1a93c71e02d5236a40ed8db0b8b8fb47a4>` const& l) const

Group action on lines.

This function rotates a parameterized line ``l(t) = o + t * d`` by the :ref:`SO2 <doxid-classsophus_1_1_s_o2>` element and scales it by the scale factor

Origin ``o`` is rotated and scaled Direction ``d`` is rotated (preserving it's norm)

.. index:: pair: function; operator*
.. _doxid-classsophus_1_1_rx_s_o2_base_1ab35b3fd004cf9c79b6307507208748c4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Hyperplane<doxid-classsophus_1_1_rx_s_o2_base_1a80b11a558196a77a4eee90af07879c36>` operator*(:ref:`Hyperplane<doxid-classsophus_1_1_rx_s_o2_base_1a80b11a558196a77a4eee90af07879c36>` const& p) const

Group action on hyper-planes.

This function rotates a hyper-plane ``n.x + d = 0`` by the :ref:`SO2 <doxid-classsophus_1_1_s_o2>` element and scales offset by the scale factor

Normal vector ``n`` is rotated Offset ``d`` is scaled

Note that in 2d-case hyper-planes are just another parametrization of lines

.. index:: pair: function; operator*=
.. _doxid-classsophus_1_1_rx_s_o2_base_1ab45c8ed4e597c59faf4787e488eb7a7a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename OtherDerived,
		typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
		>
	RxSO2Base<Derived>& operator*=(RxSO2Base<OtherDerived> const& other)

In-place group multiplication. This method is only valid if the return type of the multiplication is compatible with this :ref:`SO2 <doxid-classsophus_1_1_s_o2>` 's Scalar type.

Note: This function performs saturation for products close to zero in order to ensure the class invariant.

.. index:: pair: function; Dx_this_mul_exp_x_at_0
.. _doxid-classsophus_1_1_rx_s_o2_base_1ab4d6e0794b32b7dccf9ef449162946a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix<doxid-namespacesophus_1a7f99d420690326fc31ef6aed3fd0038c>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`> Dx_this_mul_exp_x_at_0() const

Returns derivative of this \* RxSO2::exp(x) wrt. x at x=0.

.. index:: pair: function; Dx_log_this_inv_by_x_at_this
.. _doxid-classsophus_1_1_rx_s_o2_base_1a76cbf7d0ffc4fab6aac8f32b726588c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix<doxid-namespacesophus_1a7f99d420690326fc31ef6aed3fd0038c>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kDoF<doxid-classsophus_1_1_rx_s_o2_base_1a1c181592d00d3ba4aa8f9513ce84b501>`, :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>`> Dx_log_this_inv_by_x_at_this() const

Returns derivative of log(this^{-1} \* x) by x at x=this.

.. index:: pair: function; params
.. _doxid-classsophus_1_1_rx_s_o2_base_1aef9298ddd2d6db86a01eaf3d137a7d68:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`sophus::Vector<doxid-namespacesophus_1a7c637d4509eb50d45192c268f3c0d2d4>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`, :ref:`kNumParameters<doxid-classsophus_1_1_rx_s_o2_base_1a51ee5705a4df23393e070da59cd0156c>`> params() const

Returns internal parameters of RxSO(2).

It returns (c[0], c[1]), with c being the complex number.

.. index:: pair: function; setComplex
.. _doxid-classsophus_1_1_rx_s_o2_base_1a484bd11ef4cc03a3eb42b7a0bce2e969:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setComplex(:ref:`Vector2<doxid-namespacesophus_1a54452ae97bdb09f94e3d89cb9bd17000>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> const& z)

Sets non-zero complex.

Precondition: ``z`` must not be close to either zero or infinity.

.. index:: pair: function; complex
.. _doxid-classsophus_1_1_rx_s_o2_base_1a6bdfd88f75eaa8dfc10a9396af38cdef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ComplexType<doxid-classsophus_1_1_rx_s_o2_base_1ac94c88cefdd73c579e96a76576b6aaff>` const& complex() const

Accessor of complex.

.. index:: pair: function; rotationMatrix
.. _doxid-classsophus_1_1_rx_s_o2_base_1abdf765563c43a6705b4e54a3b614625d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` rotationMatrix() const

Returns rotation matrix.

.. index:: pair: function; scale
.. _doxid-classsophus_1_1_rx_s_o2_base_1af369491cddc82b866f951f5148db0b00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` scale() const

Returns scale.

.. index:: pair: function; setAngle
.. _doxid-classsophus_1_1_rx_s_o2_base_1a016b34f11120c500b7775f93f98dc0eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setAngle(:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` const& theta)

Setter of rotation angle, leaves scale as is.

.. index:: pair: function; setRotationMatrix
.. _doxid-classsophus_1_1_rx_s_o2_base_1a9eb8ca3889379395594ad29fc69a33d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setRotationMatrix(:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` const& R)

Setter of complex using rotation matrix ``R``, leaves scale as is.

Precondition: ``R`` must be orthogonal with determinant of one.

.. index:: pair: function; setScale
.. _doxid-classsophus_1_1_rx_s_o2_base_1a355d2bb639b0ff62ac17c103958e443b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setScale(:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>` const& scale)

Sets scale and leaves rotation as is.

.. index:: pair: function; setScaledRotationMatrix
.. _doxid-classsophus_1_1_rx_s_o2_base_1a86b94658b58a4fb9acfbda91a1226857:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setScaledRotationMatrix(:ref:`Transformation<doxid-classsophus_1_1_rx_s_o2_base_1acaaf872979c0a9ee3b98318585b7ceab>` const& sR)

Setter of complex number using scaled rotation matrix ``sR``.

Precondition: The 2x2 matrix must be "scaled orthogonal" and have a positive determinant.

.. index:: pair: function; setSO2
.. _doxid-classsophus_1_1_rx_s_o2_base_1a626dbfc3cb15c08ef0ca4b062dbe3e89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setSO2(:ref:`SO2<doxid-classsophus_1_1_s_o2>`<:ref:`Scalar<doxid-classsophus_1_1_rx_s_o2_base_1aa43277981c0f48c21ca0b6521896443b>`> const& so2)

Setter of SO(2) rotations, leaves scale as is.

